{"version":3,"sources":["assets/foreign_language_books.jpg","components/header/Header.js","components/sidebar/Sidebar.js","components/userTables/DetailInputTag.js","components/userTables/StaffTable.js","components/userTables/StudentTable.js","components/staff/OverviewAccounts.js","components/feedback/DialogBox.js","components/feedback/CircularProgressWithLabel.js","components/staff/CreateAccount.js","components/staff/ScheduleExam.js","components/staff/MarksManagement.js","components/credentials/PasswordChange.js","components/staff/Staff.js","components/student/Student.js","components/login/Login.js","MainRouter.js","App.js","index.js","constants/index.js","resources/request.js"],"names":["module","exports","request","require","useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","button","textTransform","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","EnhancedUserMenu","history","useHistory","id","anchorEl","keepMounted","open","Boolean","onClose","handleOnUserMenuClose","MenuItem","key","onClick","userDetail","auth","getAvailableUserDetails","roles","indexOf","push","username","replace","redirect","logout","Header","classes","useState","setAnchorEl","name","pos","firstname","slice","toUpperCase","toLowerCase","lastname","formatUserName","AppBar","position","className","Typography","variant","Button","aria-controls","aria-haspopup","color","size","startIcon","AccountCircle","event","currentTarget","Sidebar","this","Drawer","classNameDrawer","classNameDrawerPaper","classNameDrawerContainer","List","ListItem","AccountBoxTwoTone","handleAccountsButtonClick","endIcon","sidebarProps","openAccountsButton","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","nested","accountsCollapseHandlers","handleClickView","ListItemIcon","PeopleTwoTone","ListItemText","primary","handleClickCreate","PersonAddTwoTone","AssessmentTwoTone","handleMarksExamsButtonClick","openMarksExamsButton","marksExamsCollapseHandlers","handleClickManageMarks","StraightenTwoTone","handleClickScheduleExams","CalendarTodayTwoTone","React","Component","paddingLeft","root","marginBottom","label","textAlign","palette","main","marginLeft","DetailInputTag","display","labelName","inputValue","StaffTable","componentDidMount","fetchData","get","err","res","setState","data","body","handleCloseDialog","showDetails","state","detailData","tableTitle","columns","field","map","staff","staffNumber","fullname","dateOfBirth","actions","icon","tooltip","rowData","options","search","headerStyle","backgroundColor","components","Toolbar","style","fontSize","fontWeight","paddingBottom","paddingTop","Dialog","DialogTitle","DialogContent","phoneNumber","email","officePhoneNumber","officeNumber","DialogActions","table","minWidth","width","StudentTable","studentsLimitedData","setStudentsLimitedData","studentsDetailedData","setStudentsDetailedData","setShowDetails","useEffect","student","studentNumber","currentLevel","margin","studentTableHeaderNames","staffTableHeaderNames","OverviewAccounts","tableHeaderNames","DialogBox","aria-labelledby","aria-describedby","DialogContentText","contentText","undefined","btn2IsVisible","onButton2Click","btn2Name","onButton1Click","autoFocus","btn1Name","progess","div","EnhancedCircularProgressWithLabel","Box","CircularProgress","top","left","bottom","right","alignItems","justifyContent","CircularProgressWithLabel","maxWidth","PaperProps","boxShadow","CreateAccount","handleRadioClick","target","value","handleCheckBoxClick","checked","handleTextFieldChanges","handleCreatAccountTextFieldsChanges","handleConfirmButtonClick","handleCreateAccountButtonClick","preventDefault","staffRoles","Card","card","raised","onSubmit","CardContent","FormControl","component","RadioGroup","row","createAccountProps","accountType","onChange","radioGroup","FormLabel","formLabel","required","FormControlLabel","labelPlacement","radio","control","Radio","isStaffAccount","FormGroup","Checkbox","ROLE_STAFF_ADMIN","ROLE_STAFF_MANAGER","ROLE_STAFF_TEACHER","TextField","textField","type","InputLabelProps","shrink","select","SelectProps","native","level","error","Error","errorMessage","CardActions","createAccount","openConfirmationDialog","onclose","handleCancelOrCloseDialog","openSuccessDBox","handleCASuccessDBoxOnClose","handleCASuccessDBoxOnButton1Click","handleCASuccessDBoxOnButton2Click","accountCreationInProgress","padding","light","verticalAlign","flexDirection","scheduleBotton","checkBox","container","formGroupLabel","ScheduleExam","handleScheduleExamCheckBoxChanges","levels","scheduleExamProps","examDate","handleScheduleExamTextFieldsChanges","Container","A1Checked","A2Checked","B1Checked","B2Checked","C1Checked","handleScheduleExamScheduleButtonClick","openScheduleExamDBox","handleSEOnDBoxClose","handleSEDBoxButtonClick","legend","secondary","fieldset","borderStyle","borderColor","info","minHeight","toolbar","toolbarMarksSummaryTable","titleMarksSummaryTable","selectMarksSummaryTable","markAssignmentToolbarTitle","progress","rowContainer","columnContainer","subjects","MarkAssignmentTable","score","setScore","selectedSubject","setSelectedSubject","latestExamDate","setLatestExamDate","studentFullName","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","subject","Save","markDto","subjectName","examLevel","post","MarksSummaryTable","examsDates","setExamsDates","selectedDate","setSelectedDate","marks","setMarks","setExamLevel","length","fetchMarksDataOnComponentMount","helperText","choosenDate","date","mark","MarksManagement","setData","setLevel","setTableTitle","openDialogBox","setOpenDialogBox","openSummaryTable","setOpenSummaryTable","selectedStudentStudentNumber","setSelectedStudentStudentNumber","selectedStudentFullname","setSelectedStudentFullname","importingStudentsByLevel","setImportingStudentsByLevel","staffnumber","studentOrStaffNumber","fetchStudentsData","handleClosedDialogBox","handleCloseSummaryTable","levl","form","marginTop","submit","ChangeAccountPassword","setError","seterrorMessage","currentPassword","newPassword","confirmPassword","formState","setFormState","openDBox","setOpenDBox","handleOnTextFieldChange","validateConfirmPasswordMatchesNewPassword","CssBaseline","passwordUpdateDataDto","response","message","fullWidth","redirectDestination","Staff","clearCreateAccountFormOnAccountCreationSuccessful","accountCreationSuccess","clearScheduleExamFormOnScheduleSuccessful","staffView","handleClickEdit","handleClickDelete","stateProp","rolesDto","userData","staffAccountDataDto","staffDto","caError","caErrorMessage","studentAccountDataDto","studentDto","seError","seErrorMessage","scheduledExamsDataDto","examLevels","renderStaffViews","views","match","params","option","staffViews","appBar","drawer","Paper","paperMain","zIndex","flexShrink","drawerPaper","drawerContainer","overflow","paddingRight","textFieldSelect","passwordChange","EnhancedTableCell","borderBottom","EnhancedStudentDetails","studentDetails","TableContainer","compponent","EnhancedToolbar","dates","handleOnDateSelect","MarksSummaryReport","examMarks","status","StudentReportCard","studentReportCardProps","Student","fetchtMarksData","studentNb","marksReportLevel","fetchExamsDates","fetchStudentData","renderStudentViews","height","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","avatar","Login","setUserName","password","setPassword","loading","setLoading","Grid","item","xs","sm","md","square","Avatar","LockOutlined","credential","login","authenticate","header","authorization","split","PrivateRoute","rest","render","isAuthenticated","to","pathname","from","location","MainRouter","exact","path","App","ReactDOM","document","getElementById","API_BASE_URL","user","callback","set","send","end","url","JSON","parse","sessionStorage","getItem","put","remove","delete","jwt","setItem","stringify","removeItem","decodeJWT","token","obj","atob","jwtPayload","sub"],"mappings":"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","file":"static/js/main.01b320b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/foreign_language_books.31fe452a.jpg\";","import React,  { useState, }  from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, Typography, Button, } from '@material-ui/core';\r\nimport {Menu, MenuItem} from '@material-ui/core';\r\nimport { AccountCircle} from '@material-ui/icons';\r\n\r\nconst request = require ('../../resources/request');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n      textTransform: 'none',\r\n  }\r\n}));\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  })((props) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\n\r\nfunction EnhancedUserMenu(props) {\r\n\r\n    let history = useHistory()\r\n    const handleClose = () => {\r\n       props.handleOnUserMenuClose();\r\n    };\r\n\r\n\r\n    const redirect = () => {\r\n        const userDetail = request.auth.getAvailableUserDetails()\r\n    \r\n        if(userDetail.roles.indexOf(\"ROLE_STAFF_ADMIN\") > -1 || userDetail.roles.indexOf(\"ROLE_STAFF_MANAGER\") > -1 || userDetail.roles.indexOf(\"ROLE_STAFF_TEACHER\") > -1 ) {\r\n          \r\n          history.push(`/staffs/${userDetail.username.replace('.', '-')}/password-change`)\r\n          \r\n        } else if(userDetail.roles.indexOf(\"ROLE_STUDENT\") > -1){\r\n          \r\n          history.push(`/students/${userDetail.username.replace('.', '-')}/password-change`)\r\n    \r\n        }\r\n      }\r\n\r\n    const handleOnPasswordChangeClick = () => {\r\n        redirect()\r\n        props.handleOnUserMenuClose();\r\n    }\r\n\r\n    const handleOnSignOutClick = () => {\r\n        request.auth.logout(() => history.push('/'))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        \r\n        <StyledMenu\r\n            id=\"user-menu\"\r\n            anchorEl={props.anchorEl}\r\n            keepMounted\r\n            open={Boolean(props.anchorEl)}\r\n            onClose={handleClose}\r\n        >\r\n            <MenuItem key=\"changePassword\" onClick={handleOnPasswordChangeClick}>Change Password</MenuItem>\r\n            <MenuItem key=\"signOut\" onClick={handleOnSignOutClick}>Sign Out</MenuItem>\r\n        </StyledMenu>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    \r\n    const handleOnUserMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n\r\n    const handleOnUserMenuClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const formatUserName = (name) => {\r\n        \r\n        const pos = name.indexOf('.');\r\n        let firstname = name.slice(0, pos);\r\n        firstname = firstname[0].toUpperCase() + (firstname.slice(1)).toLowerCase();\r\n\r\n        let lastname = name.slice(pos + 1);\r\n        lastname = lastname[0].toUpperCase() + (lastname.slice(1)).toLowerCase();\r\n        return firstname + \"  \" + lastname;\r\n    }\r\n\r\n    const userDetail = request.auth.getAvailableUserDetails()\r\n    const username = formatUserName(userDetail.username)\r\n    return(\r\n        <AppBar position=\"fixed\" className={props.className}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    LLCE\r\n                </Typography>\r\n               \r\n                <Button\r\n                    className={classes.button}\r\n                    aria-controls='user-menu'\r\n                    aria-haspopup='true'\r\n                    color='inherit'\r\n                    size='large'\r\n                    startIcon={ <AccountCircle/> }\r\n                    onClick={handleOnUserMenuClick}\r\n                >\r\n                    {username }\r\n                </Button>\r\n                <EnhancedUserMenu\r\n                    anchorEl={anchorEl}\r\n                    handleOnUserMenuClose={handleOnUserMenuClose}\r\n                />\r\n            </Toolbar>\r\n        </AppBar>        \r\n    );\r\n}","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport {ListItem, ListItemIcon, ListItemText, } from '@material-ui/core';\r\nimport {Button,Collapse,} from '@material-ui/core';\r\nimport {AssessmentTwoTone,StraightenTwoTone, AccountBoxTwoTone, PeopleTwoTone,DashboardTwoTone,\r\n        PersonAddTwoTone,  ExpandLess, ExpandMore, EditTwoTone, DeleteTwoTone, CalendarTodayTwoTone} from '@material-ui/icons';\r\n\r\nconst request = require ('../../resources/request');\r\n\r\n        const styles = theme => ({\r\n          nested: {\r\n            paddingLeft: theme.spacing(4),\r\n          },\r\n        });\r\n\r\n       \r\nclass Sidebar extends React.Component {\r\n\r\n    render() {\r\n        \r\n        const {classes} = this.props;\r\n        \r\n        const userDetail = request.auth.getAvailableUserDetails()\r\n\r\n        return(\r\n            <Drawer\r\n                className={this.props.classNameDrawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                paper: this.props.classNameDrawerPaper,\r\n                }}\r\n            >\r\n                <Toolbar />\r\n                <div className={this.props.classNameDrawerContainer}>\r\n                <List>\r\n                    {false && (<ListItem key='dashboard'>\r\n                        <Button\r\n                            startIcon={<DashboardTwoTone/>} \r\n                        > \r\n                            Dashboard\r\n                        </Button>\r\n                    </ListItem>)}\r\n                    <ListItem key='manage' >\r\n                        <Button\r\n                            startIcon={<AccountBoxTwoTone/>} \r\n                            onClick={this.props.handleAccountsButtonClick}\r\n                            endIcon={this.props.sidebarProps.openAccountsButton ? <ExpandLess /> : <ExpandMore />}\r\n                        > \r\n                            Accounts\r\n                        </Button>\r\n                        \r\n                    </ListItem>\r\n                    <Collapse in={this.props.sidebarProps.openAccountsButton} timeout=\"auto\" unmountOnExit>\r\n                        <List className={classes.nested}>\r\n                            \r\n                            <ListItem key=\"view\" button onClick={this.props.accountsCollapseHandlers.handleClickView}>\r\n                                <ListItemIcon>\r\n                                    <PeopleTwoTone/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary='View'/>\r\n                            </ListItem>\r\n\r\n                            { userDetail.roles.indexOf(\"ROLE_STAFF_ADMIN\") > -1 ?\r\n                                (<ListItem key=\"create-account\" button onClick={this.props.accountsCollapseHandlers.handleClickCreate}>\r\n                                    <ListItemIcon>\r\n                                        <PersonAddTwoTone/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary='Create'/>\r\n                                </ListItem>) : null\r\n                            }\r\n\r\n                            {false && (<ListItem>\r\n                                <ListItemIcon>\r\n                                   <EditTwoTone/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary='Edit'/>\r\n                            </ListItem>)}\r\n\r\n                            {false && (<ListItem>\r\n                                <ListItemIcon>\r\n                                    <DeleteTwoTone/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary='Delete'/>\r\n                            </ListItem>)}\r\n\r\n                        </List>\r\n                    </Collapse> \r\n                    <ListItem key='marks'>\r\n                        <Button\r\n                            startIcon={<AssessmentTwoTone/>} \r\n                            onClick={this.props.handleMarksExamsButtonClick}\r\n                            endIcon={this.props.sidebarProps.openMarksExamsButton ? <ExpandLess /> : <ExpandMore />}\r\n                        > \r\n                            Marks/Exams\r\n                        </Button>\r\n                    </ListItem> \r\n                    <Collapse in={this.props.sidebarProps.openMarksExamsButton} timeout=\"auto\" unmountOnExit>\r\n                        <List className={classes.nested}>\r\n\r\n                            <ListItem key=\"manageMarks\" button onClick={this.props.marksExamsCollapseHandlers.handleClickManageMarks}>\r\n                                <ListItemIcon>\r\n                                    <StraightenTwoTone/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary='Manage Marks'/>\r\n                            </ListItem>\r\n\r\n                            { userDetail.roles.indexOf(\"ROLE_STAFF_MANAGER\") > -1 ?\r\n                                (<ListItem key=\"ScheduleExam\" button onClick={this.props.marksExamsCollapseHandlers.handleClickScheduleExams}>\r\n                                    <ListItemIcon>\r\n                                        <CalendarTodayTwoTone/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary='Schedule Exam'/>\r\n                                </ListItem>) : null\r\n                            }\r\n\r\n                        </List>\r\n                    </Collapse>              \r\n                </List>\r\n                </div>\r\n            </Drawer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Sidebar)","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Typography} from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    label:{\r\n        textAlign: 'center',\r\n        color: theme.palette.primary.main,\r\n        marginRight: theme.spacing(5),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nexport default function DetailInputTag(props) {\r\n\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <Typography \r\n                    className={classes.label}\r\n                    variant= 'subtitle1'\r\n                    color= 'inherit'\r\n                    display= 'inline'\r\n            >\r\n                {props.labelName}  \r\n            </Typography>\r\n            <Typography display= 'inline' variant= 'body2'>{props.inputValue} </Typography>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport { Button,} from '@material-ui/core';\r\nimport {Dialog,DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\r\nimport DetailInputTag from './DetailInputTag';\r\n\r\nconst request = require ('../../resources/request');\r\n\r\nclass StaffTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            data: [],\r\n            detailData:{},\r\n            showDetails: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => this.fetchData()\r\n    \r\n    //componentDidUpdate = () => this.fetchData()\r\n\r\n    fetchData = () => {\r\n        request.get('staffs/limitedInfos', (err, res) => {\r\n\r\n            if(err){\r\n                \r\n            }\r\n            else {\r\n                this.setState({data: res.body})\r\n            }\r\n        })\r\n    }\r\n\r\n    handleCloseDialog = () => {\r\n        this.setState({showDetails: false}) \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        const tableTitle = this.props.tableTitle;\r\n\r\n        return (\r\n            \r\n            <>\r\n                <MaterialTable\r\n                    title={tableTitle}\r\n                    columns={[\r\n                        {title: 'Staff No.', field: 'staffNumber'},\r\n                        {title: 'Name', field: 'name'},\r\n                        {title: 'Date of Birth', field: 'dateOfBirth'},\r\n                    ]}\r\n                    data= {this.state.data.map((staff) => (\r\n                            {staffNumber: staff.staffNumber,\r\n                            name:  staff.fullname ,\r\n                            dateOfBirth: staff.dateOfBirth,\r\n                            }\r\n                        ))}\r\n\r\n                    actions= {[\r\n                        {\r\n                            icon: 'emoji_people',\r\n                            tooltip: 'More details ...',\r\n                            onClick: (event, rowData) => {\r\n                                \r\n                                request.get('staffs/' + rowData.staffNumber, (err, res) => {\r\n\r\n                                    if(err) {\r\n                                        \r\n                                    }\r\n                                    else {\r\n                                        \r\n                                        this.setState({ detailData: res.body, showDetails: true})\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                    ]}\r\n\r\n                    options={{\r\n                        search: true,\r\n                        headerStyle:{backgroundColor:'#4791db', color:'white'},\r\n                    }}\r\n                    components={{\r\n                                    Toolbar: props => (\r\n                                        <div style={{color: '#115293', \r\n                                                     fontSize: '3.5em',\r\n                                                     fontWeight: 'bold', \r\n                                                     paddingBottom: '25px',\r\n                                                     paddingTop: '10px',\r\n                                                     }}>\r\n                                        <MTableToolbar {...props} />\r\n                                        </div>\r\n                                    )\r\n                    }}\r\n                />\r\n\r\n                <Dialog open={this.state.showDetails}\r\n                        onClose={this.handleCloseDialog}\r\n                >\r\n                    <DialogTitle id=\"more-info-dialog-title\">Staff Detail Information</DialogTitle>\r\n                    <DialogContent>\r\n                        \r\n                            <DetailInputTag labelName=\"Staff Number:\" inputValue={this.state.detailData.staffNumber}/>\r\n                            <DetailInputTag labelName=\"First Name:\" inputValue={this.state.detailData.firstname}></DetailInputTag>\r\n                            <DetailInputTag labelName=\"Last Name:\" inputValue={this.state.detailData.lastname}/>\r\n                            <DetailInputTag labelName=\"Date of Birth:\" inputValue={this.state.detailData.dateOfBirth}/>\r\n                            <DetailInputTag labelName=\"Phone Number:\" inputValue={this.state.detailData.phoneNumber}/>\r\n                            <DetailInputTag labelName=\"Email:\" inputValue={this.state.detailData.email}/>\r\n                            <DetailInputTag labelName=\"Office Phone Number:\" inputValue={this.state.detailData.officePhoneNumber}/>\r\n                            <DetailInputTag labelName=\"Office Number:\" inputValue={this.state.detailData.officeNumber}/>\r\n                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" onClick={this.handleCloseDialog} >Close</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }  \r\n}\r\nexport default StaffTable;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport MaterialTable, { MTableToolbar } from 'material-table'\r\nimport {Dialog,DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\r\nimport {Button,} from '@material-ui/core';\r\n\r\nimport DetailInputTag from './DetailInputTag';\r\n\r\nconst request = require ('../../resources/request');\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n}));\r\n\r\nexport default function StudentTable(props) {\r\n        const [studentsLimitedData, setStudentsLimitedData] = useState([])\r\n        const [studentsDetailedData, setStudentsDetailedData] = useState({})\r\n        const [showDetails, setShowDetails] = useState(false)\r\n        //const classes = useStyles();\r\n        const tableTitle = props.tableTitle;\r\n\r\n        const handleCloseDialog = () => {\r\n            setShowDetails(false)\r\n        }\r\n\r\n        const fetchData = () => {\r\n            request.get('students/limitedInfos', (err, res) => {\r\n                if(err){\r\n                    \r\n                }\r\n                else {\r\n                    setStudentsLimitedData(res.body)\r\n                }\r\n            })\r\n        }\r\n\r\n        useEffect(() => fetchData(), [])\r\n\r\n\r\n\r\n        return (\r\n            \r\n            <>\r\n\r\n                <MaterialTable\r\n                    title={tableTitle}\r\n                    columns={[\r\n                        {title: 'Student No.', field: 'studentNumber'},\r\n                        {title: 'Name', field: 'name'},\r\n                        {title: 'Date of birth', field: 'dateOfBirth'},\r\n                    ]}\r\n                    data={studentsLimitedData.map((student) => (\r\n                        {studentNumber: student.studentNumber,\r\n                         name: student.fullname ,\r\n                         dateOfBirth: student.dateOfBirth,\r\n                        }\r\n                    ))}\r\n\r\n                    actions= {[\r\n                        {\r\n                            icon: 'emoji_people',\r\n                            tooltip: 'More details ...',\r\n                            onClick: (event, rowData) => {\r\n                                \r\n                                request.get('students/' + rowData.studentNumber, (err, res) => {\r\n\r\n                                    if(err) {\r\n                                       \r\n                                    }\r\n                                    else {\r\n                                        setStudentsDetailedData(res.body)\r\n                                        setShowDetails(true)\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                    ]}\r\n\r\n                    options={{\r\n                        search: true,\r\n                        headerStyle:{backgroundColor:'#4791db', color:'white'},\r\n                    }}\r\n                    components={{\r\n                                    Toolbar: props => (\r\n                                        <div style={{color: '#115293', \r\n                                                     fontSize: '3.5em',\r\n                                                     fontWeight: 'bold', \r\n                                                     paddingBottom: '25px',\r\n                                                     paddingTop: '10px',\r\n                                                     }}>\r\n                                        <MTableToolbar {...props} />\r\n                                        </div>\r\n                                    )\r\n                    }}\r\n                />\r\n\r\n                <Dialog open={showDetails}\r\n                        onClose={handleCloseDialog}\r\n                >\r\n                    <DialogTitle id=\"more-info-dialog-title\">Student Detail Information</DialogTitle>\r\n                    <DialogContent>\r\n                        \r\n                        <DetailInputTag labelName=\"Student Number:\" inputValue={studentsDetailedData.studentNumber}/>\r\n                        <DetailInputTag labelName=\"First Name:\" inputValue={studentsDetailedData.firstname}></DetailInputTag>\r\n                        <DetailInputTag labelName=\"Last Name:\" inputValue={studentsDetailedData.lastname}/>\r\n                        <DetailInputTag labelName=\"Date of Birth:\" inputValue={studentsDetailedData.dateOfBirth}/>\r\n                        <DetailInputTag labelName=\"Phone Number:\" inputValue={studentsDetailedData.phoneNumber}/>\r\n                        <DetailInputTag labelName=\"Email:\" inputValue={studentsDetailedData.email}/>\r\n                        <DetailInputTag labelName=\"Current Level:\" inputValue={studentsDetailedData.currentLevel}/>\r\n                    \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" onClick={handleCloseDialog} >Close</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n            </>\r\n        );\r\n    \r\n}","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Typography} from '@material-ui/core'\r\n\r\nimport StaffTable from '../userTables/StaffTable'\r\nimport StudentTable from '../userTables/StudentTable'\r\n\r\nconst request = require ('../../resources/request');\r\n\r\n\r\nconst useStyles= makeStyles((theme) => ({\r\n    table:{\r\n        marginBottom: theme.spacing(6),\r\n    },\r\n    title:{\r\n        textAlign: 'center',\r\n        margin:theme.spacing(4, 0, 3),\r\n        color: theme.palette.primary.main\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\nconst studentTableTitle = \"LLCE Students\";\r\nconst staffTableTitle = \"LLCE Staff\"\r\nconst studentTableHeaderNames = [\"Student Nr. \", \"Name\", \"Date of Birth\", \"Phone Nr.\", \"E-Mail\"];\r\nconst staffTableHeaderNames = [\"Staff Nr. \", \"Name\", \"Date of Birth\", \"Phone Nr.\", \"E-Mail\", \"Office Phone Nr.\", \"Office Nr.\"];\r\n\r\n\r\n\r\nexport default function OverviewAccounts(props) {\r\n    const classes = useStyles();\r\n    const userDetail = request.auth.getAvailableUserDetails()\r\n    return(\r\n        <div >\r\n            <Typography className={classes.title} \r\n                        variant= 'h3'\r\n            >\r\n                LLCE ACCOUNTS OVERVIEW\r\n            </Typography>\r\n             \r\n            { (userDetail.roles.indexOf(\"ROLE_STAFF_ADMIN\") > -1 || userDetail.roles.indexOf(\"ROLE_STAFF_MANAGER\") > -1) ?\r\n                (<div className={classes.table}>\r\n                    <StaffTable\r\n                        tableTitle={staffTableTitle}\r\n                        tableHeaderNames={staffTableHeaderNames}\r\n                        className={classes.table}\r\n                    />\r\n                </div>) : null\r\n            }\r\n\r\n            <div className={classes.table}>\r\n                <StudentTable \r\n                    tableTitle={studentTableTitle}\r\n                    tableHeaderNames={studentTableHeaderNames}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {Dialog,DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\n\r\nexport default function DialogBox(props) {\r\n    \r\n    return(\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle>{props.title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>{props.contentText}</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {(props.btn2IsVisible !== undefined)&&(props.btn2IsVisible) ? (<Button onClick={props.onButton2Click} color=\"primary\">{props.btn2Name}</Button>) : null}\r\n                <Button onClick={props.onButton1Click} color=\"primary\" autoFocus >{props.btn1Name}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Dialog, DialogContent, Typography, Box, CircularProgress} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    progess: {\r\n      margin:theme.spacing(10, 10, 10, 10)\r\n    },\r\n    div:{\r\n      margin:theme.spacing(10)\r\n    },\r\n  }));\r\n  function EnhancedCircularProgressWithLabel(props) {\r\n    const classes = useStyles();\r\n    return (\r\n      <Box position=\"relative\" display=\"inline-flex\" className={classes.progess}>\r\n        <CircularProgress  size={props.size} />\r\n        <Box\r\n          top={0}\r\n          left={0}\r\n          bottom={0}\r\n          right={0}\r\n          position=\"absolute\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Typography color=\"primary\"><b>{props.label}</b></Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n\r\n  export default function CircularProgressWithLabel(props) {\r\n    const classes = useStyles();\r\n    return(\r\n      <div className={classes.div}>\r\n        <Dialog\r\n          open={props.open}\r\n          maxWidth='sm'\r\n          PaperProps={{\r\n            style: {\r\n              backgroundColor: 'transparent',\r\n              boxShadow: 'none',\r\n            },\r\n          }}\r\n        >\r\n          <DialogContent>\r\n            <EnhancedCircularProgressWithLabel label={props.label} size={props.size}/>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Typography, TextField, Button,} from '@material-ui/core';\r\nimport { Radio, RadioGroup, FormControl, FormControlLabel, FormLabel} from '@material-ui/core';\r\nimport {FormGroup,Checkbox} from '@material-ui/core';\r\nimport {Card, CardActions, CardContent, Box,}  from '@material-ui/core';\r\nimport {Error} from '@material-ui/icons';\r\n\r\nimport DialogBox from '../feedback/DialogBox'\r\nimport CircularProgressWithLabel from '../feedback/CircularProgressWithLabel'\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n      maxWidth: 'auto',\r\n      textAlign: 'center',\r\n      padding: theme.spacing(5, 0, 2, 0),\r\n    },\r\n    title: {\r\n      textAlign: 'center',\r\n      margin: theme.spacing(2, 0, 5, 0),\r\n      color: theme.palette.primary.main\r\n    },\r\n    formLabel: {\r\n        margin: theme.spacing(1.5, 4, 1, 0),\r\n        color: theme.palette.primary.light\r\n    },\r\n    radio:{\r\n        margin: theme.spacing(0, 2, 0, 1),\r\n    },\r\n    radioGroup: {\r\n        verticalAlign: 'middle'\r\n    },\r\n    textField: {\r\n      width: 400\r\n    },\r\n    createAccount: {\r\n      margin: 'auto',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    error: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(3, 0, 2, 5)\r\n      },\r\n      errorMessage: {\r\n          marginLeft: theme.spacing(1.5)\r\n      },\r\n  })\r\n\r\n\r\nclass CreateAccount extends React.Component {\r\n\r\n\r\n    handleRadioClick = (event) => {\r\n        this.props.handleRadioClick(event.target.value)\r\n    }\r\n\r\n    handleCheckBoxClick = (event) => {\r\n        this.props.handleCheckBoxClick([event.target.name], event.target.checked)\r\n    }\r\n\r\n    handleTextFieldChanges = (event) => {\r\n        this.props.handleCreatAccountTextFieldsChanges([event.target.name], event.target.value)\r\n    }\r\n\r\n    handleConfirmButtonClick = () => {\r\n\r\n    }\r\n\r\n    handleCreateAccountButtonClick = (event) => {\r\n        \r\n        this.props.handleCreateAccountButtonClick()\r\n        event.preventDefault()\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {classes} = this.props\r\n        const levels = [\"A1\", \"A2\", \"B1\", \"B2\", \"C1\"] \r\n        const staffRoles = [\"ADMIN\", \"MANAGER\", \"TEACHER\"]\r\n\r\n        // This are the role names as stored in the datase\r\n        const roles = [\"ROLE_STAFF_ADMIN\", \"ROLE_STAFF_MANAGER\", \"ROLE_STAFF_TEACHER\", \"ROLE_STDUENT\"]\r\n        \r\n        return(\r\n            <div>\r\n\r\n                <Card className={classes.card} raised>\r\n                    \r\n                    <Typography className={classes.title} \r\n                            variant= 'h3'\r\n                            color= 'inherit'\r\n                    >\r\n                        Create New Account\r\n                    </Typography>\r\n\r\n                    <form onSubmit={this.handleCreateAccountButtonClick}>\r\n                        <CardContent>\r\n                            <FormControl component=\"fieldset\">\r\n                                    <RadioGroup row value={this.props.createAccountProps.accountType} onChange={this.handleRadioClick} className={classes.radioGroup}>\r\n                                        \r\n                                        <FormLabel component='label'\r\n                                                    className={classes.formLabel}\r\n                                                    required\r\n                                        >\r\n                                            Choose Account Type:\r\n                                        </FormLabel>\r\n                                        <FormControlLabel value=\"student-account\"  label=\"Student Account\" \r\n                                                            labelPlacement=\"end\"   className={classes.radio}\r\n                                                            control={<Radio color=\"primary\"/>} \r\n                                        />\r\n                                        <FormControlLabel value=\"staff-account\"  label=\"Staff Account\" \r\n                                                            labelPlacement=\"end\" className={classes.radio}\r\n                                                            control={<Radio color=\"primary\"/>}\r\n                                        />\r\n                                    </RadioGroup>\r\n                            </FormControl> <br/> <br/>\r\n\r\n                            {this.props.createAccountProps.isStaffAccount ? \r\n                                (\r\n                                    <div>\r\n                                        <FormControl component=\"fieldset\" >       \r\n                                            <FormGroup row>\r\n                                            <FormLabel component=\"label\" required className={classes.formLabel}> Choose role(s): </FormLabel>\r\n\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox color=\"primary\" checked={this.props.createAccountProps.ROLE_STAFF_ADMIN} onChange={this.handleCheckBoxClick} name={roles[0]} />}\r\n                                                    label={staffRoles[0]}\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox color=\"primary\" checked={this.props.createAccountProps.ROLE_STAFF_MANAGER}  onChange={this.handleCheckBoxClick} name={roles[1]} />}\r\n                                                    label={staffRoles[1]}\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox color=\"primary\" checked={this.props.createAccountProps.ROLE_STAFF_TEACHER}  onChange={this.handleCheckBoxClick} name={roles[2]} />}\r\n                                                    label={staffRoles[2]}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </FormControl>\r\n                                        <br/> <br/>\r\n                                    </div>\r\n\r\n                                ) : null\r\n                            }\r\n                            <TextField\r\n                                className={classes.textField}\r\n                                margin='normal'\r\n                                id=\"firstname\"\r\n                                type=\"text\"\r\n                                label=\"First name\"\r\n                                name=\"firstname\"\r\n                                required\r\n                                value={this.props.createAccountProps.firstname}\r\n                                onChange={this.handleTextFieldChanges}\r\n                                \r\n                            /><br/> <br/>\r\n                            <TextField\r\n                                className={classes.textField}\r\n                                margin='normal'\r\n                                id=\"lastname\"\r\n                                type=\"text\"\r\n                                label=\"Last name\"\r\n                                name=\"lastname\"\r\n                                required\r\n                                value={this.props.createAccountProps.lastname}\r\n                                onChange={this.handleTextFieldChanges}\r\n                                \r\n                            /><br/> <br/>\r\n                            <TextField\r\n                                className={classes.textField}\r\n                                margin='normal'\r\n                                id=\"dateOfBirth\"\r\n                                type=\"date\"\r\n                                label=\"Date of birth\"\r\n                                name=\"dateOfBirth\"\r\n                                required\r\n                                value={this.props.createAccountProps.dateOfBirth}\r\n                                onChange={this.handleTextFieldChanges}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            /><br/> <br/>\r\n                            <TextField\r\n                                className={classes.textField}\r\n                                margin='normal'\r\n                                id=\"phoneNumber\"\r\n                                type=\"tel\"\r\n                                label=\"Phone number\"\r\n                                name=\"phoneNumber\"\r\n                                value={this.props.createAccountProps.phoneNumber}\r\n                                onChange={this.handleTextFieldChanges}\r\n                            /><br/> <br/>\r\n\r\n                            {this.props.createAccountProps.isStaffAccount ? \r\n                                (\r\n                                    <div>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            margin='normal'\r\n                                            id=\"officePhoneNumber\"\r\n                                            type=\"tel\"\r\n                                            label=\"Office phone number\"\r\n                                            name=\"officePhoneNumber\"\r\n                                            value={this.props.createAccountProps.officePhoneNumber}\r\n                                            onChange={this.handleTextFieldChanges}\r\n                                        /><br/> <br/>\r\n                                    </div>\r\n                                ) : null\r\n                            }\r\n\r\n                            <TextField\r\n                                className={classes.textField}\r\n                                margin='normal'\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                required\r\n                                value={this.props.createAccountProps.email}\r\n                                onChange={this.handleTextFieldChanges}\r\n                            /><br/> <br/>\r\n                            {!this.props.createAccountProps.isStaffAccount ? \r\n                                (\r\n                                    <div>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            margin='normal'\r\n                                            id=\"currentLevel\"\r\n                                            type=\"text\"\r\n                                            label=\"Current level\"\r\n                                            select\r\n                                            SelectProps={{native:true}}\r\n                                            name=\"currentLevel\"\r\n                                            required\r\n                                            value={this.props.createAccountProps.currentLevel}\r\n                                            onChange={this.handleTextFieldChanges}\r\n                                        >\r\n                                            {levels.map((level) => (\r\n                                                <option key={level} value={level}>\r\n                                                    {level}\r\n                                                </option>\r\n                                            ))}\r\n                                        </TextField><br/> <br/>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            margin='normal'\r\n                                            id=\"officeNumber\"\r\n                                            type=\"text\"\r\n                                            label=\"Office number\"\r\n                                            name=\"officeNumber\"\r\n                                            value={this.props.createAccountProps.officeNumber}\r\n                                            onChange={this.handleTextFieldChanges}\r\n                                        /><br/> <br/>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                            {this.props.createAccountProps.error && (<Box className={classes.error}>\r\n                                <Error color='error'/>\r\n                                <Typography className={classes.errorMessage} color='error'>{this.props.createAccountProps.errorMessage}</Typography>\r\n                            </Box>)}\r\n\r\n                        </CardContent>\r\n\r\n                        <CardActions>\r\n                    \r\n                            <Button \r\n                                type=\"submit\"\r\n                                color=\"primary\" \r\n                                variant=\"contained\" \r\n                                className={classes.createAccount}  \r\n                            >\r\n                                Create Account\r\n                            </Button>\r\n                        </CardActions>\r\n                    </form>\r\n                </Card>\r\n                <DialogBox \r\n                    btn2IsVisible={true}\r\n                    open={this.props.createAccountProps.openConfirmationDialog}\r\n                    title=\"Confirm Account Creation\"\r\n                    contentText=\"Do you want to confirm the creation of this account ?\" \r\n                    btn1Name=\"Confirm\" btn2Name=\"Cancel\" \r\n                    onclose={this.props.handleCancelOrCloseDialog} \r\n                    onButton1Click={this.props.handleConfirmButtonClick}\r\n                    onButton2Click={this.props.handleCancelOrCloseDialog}\r\n                />\r\n\r\n                <DialogBox \r\n                    btn2IsVisible={true}\r\n                    open={this.props.createAccountProps.openSuccessDBox}\r\n                    title=\"Account Creation Successful\"\r\n                    contentText={<>The account has successfully been created.<br/> Do you want to create another account ?</>}\r\n                    btn1Name=\"YES\" btn2Name=\"NO\"\r\n                    onclose={this.props.handleCASuccessDBoxOnClose} \r\n                    onButton1Click={this.props.handleCASuccessDBoxOnButton1Click}\r\n                    onButton2Click={this.props.handleCASuccessDBoxOnButton2Click}\r\n                />\r\n                <CircularProgressWithLabel size={200} label=\"creation in progress\" open={this.props.createAccountProps.accountCreationInProgress}/>\r\n\r\n                      \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CreateAccount);","import React from 'react';\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport {Typography, TextField, Button,} from '@material-ui/core';\r\nimport {Card, CardActions, CardContent, Container, Box}  from '@material-ui/core';\r\nimport {FormControl, FormGroup, FormControlLabel, Checkbox}  from '@material-ui/core';\r\nimport {Error} from '@material-ui/icons';\r\nimport DialogBox from '../feedback/DialogBox'\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(8, 0, 3, 0),\r\n        textAlign: 'center', \r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',   \r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n        margin: theme.spacing(2, 0, 4, 0),\r\n        color: theme.palette.primary.main\r\n    },\r\n    textField: {\r\n        marginBottom: theme.spacing(3),\r\n        width: 400\r\n    },\r\n    scheduleBotton: {\r\n        //margin: 'auto',\r\n        marginBottom: theme.spacing(5),\r\n    },\r\n    checkBox:{\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',  \r\n    },\r\n    formGroupLabel: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    error: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(3, 0, 2, 5)\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ScheduleExam(props) {\r\n\r\n    const handleTextFieldChanges = (event) => {\r\n        props.handleScheduleExamTextFieldsChanges(event.target.name, event.target.value)\r\n    }\r\n\r\n    const handleScheduleExamCheckBoxChanges = (event) => {\r\n        props.handleScheduleExamCheckBoxChanges(event.target.name, event.target.checked)\r\n    }\r\n\r\n   \r\n    const classes = useStyles()\r\n    const levels = [\"A1\", \"A2\", \"B1\", \"B2\", \"C1\"]\r\n    return(\r\n\r\n        <div>\r\n            <Card className={classes.card} raised>\r\n                <CardContent>\r\n                    <Typography \r\n                    className={classes.title}\r\n                    variant= 'h3'\r\n                    color= 'inherit'\r\n                    >\r\n                        Schedule Exam Date \r\n                    </Typography><br/>\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        variant='outlined'\r\n                        margin='normal'\r\n                        id=\"exam_date\"\r\n                        type=\"date\"\r\n                        label=\"Date of Exam\"\r\n                        name=\"examDate\"\r\n                        required={true}\r\n                        value={props.scheduleExamProps.examDate}\r\n                        onChange={handleTextFieldChanges}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                    <Container>\r\n                        <div className={classes.container}>\r\n                            <Typography className={classes.formGroupLabel} color='primary'>Choose exam level(s):</Typography>\r\n                            <FormControl>\r\n                                <FormGroup row>\r\n                                    <FormControlLabel\r\n                                        className={classes.checkBox}\r\n                                        control={<Checkbox color='primary' checked={props.scheduleExamProps.A1Checked} onChange={handleScheduleExamCheckBoxChanges} name={'A1Checked'} />}\r\n                                        label={levels[0]}\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        className={classes.checkBox}\r\n                                        control={<Checkbox color='primary' checked={props.scheduleExamProps.A2Checked} onChange={handleScheduleExamCheckBoxChanges} name={'A2Checked'} />}\r\n                                        label={levels[1]}\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        className={classes.checkBox}\r\n                                        control={<Checkbox color='primary' checked={props.scheduleExamProps.B1Checked} onChange={handleScheduleExamCheckBoxChanges} name={'B1Checked'} />}\r\n                                        label={levels[2]}\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        className={classes.checkBox}\r\n                                        control={<Checkbox color='primary' checked={props.scheduleExamProps.B2Checked} onChange={handleScheduleExamCheckBoxChanges} name={'B2Checked'} />}\r\n                                        label={levels[3]}\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        className={classes.checkBox}\r\n                                        control={<Checkbox color='primary' checked={props.scheduleExamProps.C1Checked} onChange={handleScheduleExamCheckBoxChanges} name={'C1Checked'} />}\r\n                                        label={levels[4]}\r\n                                    />\r\n                                </FormGroup>\r\n                            </FormControl>\r\n                        </div>\r\n                    </Container>\r\n                    {props.scheduleExamProps.error && (<Box className={classes.error}>\r\n                        <Error color='error'/>\r\n                        <Typography className={classes.errorMessage} color='error'>{props.scheduleExamProps.errorMessage}</Typography>\r\n                    </Box>)}\r\n\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button color=\"primary\" variant=\"contained\" \r\n                            className={classes.scheduleBotton}\r\n                            onClick={props.handleScheduleExamScheduleButtonClick}\r\n                    >\r\n                        Schedule\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n            <DialogBox\r\n                open={props.scheduleExamProps.openScheduleExamDBox}\r\n                title=\"Exam(s) Schedule Confirmation\"\r\n                contentText=\"The Exam(s) have successfully been scheduled\" \r\n                btn1Name='OK'\r\n                onClose={props.handleSEOnDBoxClose}\r\n                onButton1Click={props.handleSEDBoxButtonClick}\r\n            />\r\n        </div>\r\n        \r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable, { MTableToolbar } from 'material-table'\r\nimport {Dialog,DialogActions, DialogContent, TextField, Typography, Box, } from '@material-ui/core';\r\nimport {Table, TableBody, TableCell, TableHead, TableRow, Toolbar, CircularProgress} from '@material-ui/core';\r\nimport {Button, Container} from '@material-ui/core';\r\nimport {Save} from '@material-ui/icons';\r\n\r\n\r\nconst request = require ('../../resources/request');\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    legend:{\r\n        backgroundColor: \"#FFFAFA\",\r\n        color: theme.palette.secondary.main,\r\n        padding: theme.spacing(1, 1, 1, 1),\r\n    },\r\n    fieldset:{\r\n        margin: theme.spacing(4, 0, 6, 0),\r\n        borderStyle: \"groove\",\r\n        borderColor: theme.palette.info.light,\r\n        maxWidth:600,    \r\n    },\r\n    textField: {\r\n        margin: theme.spacing(4, 10, 3, 4),\r\n        minWidth: 150,\r\n        //borderColor: theme.palette.secondary.main,\r\n        backgroundColor: \"#FFFFFF\",\r\n    },\r\n    button: {\r\n        margin: theme.spacing(4, 0, 3, 0),\r\n        minHeight: 60,\r\n        //minWidth: 150,  \r\n    },\r\n    toolbar: {\r\n        margin: theme.spacing(1.5, 0, 1,0),\r\n    },\r\n    toolbarMarksSummaryTable: {\r\n        alignItems: 'flex-start',\r\n        padding: theme.spacing(2, 0, 2, 0),\r\n    },\r\n    titleMarksSummaryTable: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(15)   \r\n    },\r\n    selectMarksSummaryTable: {\r\n        flexGrow: 1,\r\n    },\r\n    markAssignmentToolbarTitle: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(15)\r\n    },\r\n    progress: {\r\n        margin: theme.spacing(0, 1.5, 0, 1),\r\n    },\r\n    rowContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n\r\n    },\r\n    columnContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n\r\n    }  \r\n}));\r\n\r\n\r\nconst subjects = [\"Grammar\", \"Reading  Comprehension\", \"Listening  Comprehension\", \"Text Production\"]\r\n\r\n\r\nconst levels = [\"A1\", \"A2\", \"B1\", \"B2\", \"C1\"]\r\n\r\n\r\n\r\nfunction MarkAssignmentTable(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [score, setScore] = useState(0.0)\r\n    const [selectedSubject, setSelectedSubject] = useState(\"Grammar\")\r\n    const [latestExamDate, setLatestExamDate] = useState(\"\") \r\n\r\n    const handleOnSubjectSelectChange = (event) => {\r\n        setSelectedSubject(event.target.value)\r\n    }\r\n\r\n    const handleOnScoreChange = (event) => {\r\n        setScore(event.target.value)\r\n    }\r\n\r\n    const handleOnSaveButtonClick = () => {\r\n\r\n        const markDto = {\r\n            subjectName: selectedSubject,\r\n            score: score,\r\n            studentNumber: props.studentNumber,\r\n            staffNumber: props.staffNumber,\r\n            examDate: latestExamDate,\r\n            examLevel: props.examLevel,\r\n        }\r\n\r\n        request.post(`marks`, markDto, (err, res) => {\r\n\r\n            if(err) {\r\n\r\n            } else {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    const fetchLatestDate = () => {\r\n        \r\n        request.get(`exams/latest-date`, (err, res) => {\r\n            if(err) {\r\n                \r\n            } else {\r\n                \r\n                setLatestExamDate(res.body)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchLatestDate()\r\n    }, [])\r\n\r\n    //console.log(`the value of score: ${score} and the value of selectedSubject: ${selectedSubject}`)\r\n    return(\r\n        <div>\r\n        <Toolbar className={classes.toolbar}>\r\n            <Typography variant=\"h5\" color=\"primary\" className={classes.markAssignmentToolbarTitle}>{props.studentFullName}</Typography>\r\n            <Typography variant=\"h5\" color=\"primary\"><b>Exam Date:</b> {latestExamDate}</Typography>\r\n        </Toolbar>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell><Typography variant=\"h6\">Subjects</Typography></TableCell>\r\n                    <TableCell align=\"center\"><Typography variant=\"h6\">Socred Mark</Typography></TableCell>\r\n                    <TableCell align=\"center\"></TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n                <TableRow key=\"subject\">\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        <TextField\r\n                            id=\"select subject\"\r\n                            label=\"Select Subject\"\r\n                            type=\"text\"\r\n                            select\r\n                            SelectProps={{native:true}}\r\n                            variant=\"outlined\"\r\n                            name=\"selectedSubject\"\r\n                            value={selectedSubject}\r\n                            onChange={handleOnSubjectSelectChange}\r\n                        >\r\n                            {\r\n                                subjects.map((subject) => (\r\n                                    <option key={subject} value={subject}>\r\n                                        {subject}\r\n                                    </option>\r\n                                ))\r\n                            }\r\n                        </TextField>\r\n                    </TableCell>\r\n\r\n                    <TableCell align=\"center\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            label=\"Score\"\r\n                            size='small'\r\n                            name=\"score\"\r\n                            value={score}\r\n                            onChange={handleOnScoreChange}\r\n                        />\r\n                    </TableCell>\r\n\r\n                    <TableCell align=\"right\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"medium\"\r\n                            startIcon={<Save/>}\r\n                            onClick={handleOnSaveButtonClick}\r\n                        >\r\n                            assess\r\n                        </Button>\r\n                    </TableCell>\r\n                    \r\n                </TableRow>\r\n            </TableBody>\r\n        </Table>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n//className={classes.markToolbarTitle}\r\n\r\nfunction MarksSummaryTable(props) {\r\n\r\n    const classes = useStyles();\r\n    const [examsDates, setExamsDates] = useState([]) \r\n    const [selectedDate, setSelectedDate] = useState(\"\")\r\n    const [marks, setMarks] = useState([])\r\n    const [examLevel, setExamLevel] = useState(\"\")\r\n    \r\n    const fetchDatesData = (studentNumber) => {\r\n\r\n        request.get(`marks/exam-dates?studentNumber=${studentNumber}`, (err, res) => {\r\n            if(err) {\r\n                \r\n            } else {\r\n                setExamsDates(res.body)\r\n                if(res.body && res.body.length > 0) { \r\n                    setSelectedDate(res.body[0])\r\n                }\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    const fetchMarksData = (studentNumber, examDate) => {\r\n        \r\n        request.get(`marks?studentNumber=${studentNumber}&examDate=${examDate}`, (err, res) => {\r\n            if(err) {\r\n               \r\n            } else {\r\n                //console.log(res.body)\r\n                setMarks(res.body)\r\n                if(res.body && res.body.length > 0) {\r\n                    setExamLevel(res.body[0].examLevel)\r\n                }  \r\n            }\r\n        })\r\n    }\r\n\r\n    const fetchMarksDataOnComponentMount = (studentNumber) => {\r\n\r\n        request.get(`marks/latest-completely-assessed-exam-session?studentNumber=${studentNumber}`, (err, res) => {\r\n            if(err) {\r\n                \r\n            } else {\r\n                //console.log(res)\r\n                setMarks(res.body)\r\n                if(res.body && res.body.length > 0) {\r\n                    setExamLevel(res.body[0].examLevel)\r\n                }\r\n                    \r\n            }\r\n        })\r\n    }\r\n\r\n    const handleOnSelectChange = (event) => {\r\n        const choosenDate = event.target.value\r\n        setSelectedDate(event.target.choosenDate)\r\n        fetchMarksData(props.studentNumber, choosenDate) \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDatesData(props.studentNumber)\r\n        fetchMarksDataOnComponentMount (props.studentNumber)\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            \r\n                <Toolbar className={classes.toolbarMarksSummaryTable}>\r\n                    <Typography variant=\"h6\" color=\"primary\" className={classes.titleMarksSummaryTable}>{props.studentFullName}</Typography>\r\n                    <Typography variant=\"h6\" color=\"primary\" >Exam Level {examLevel}</Typography>  \r\n                     \r\n                </Toolbar>\r\n                <Toolbar>\r\n                    <TextField\r\n                        id=\"examDate\"\r\n                        select\r\n                        SelectProps={{native: true}}\r\n                        variant=\"outlined\"\r\n                        helperText=\"choose exam date\"\r\n                        value={selectedDate}\r\n                        onChange={handleOnSelectChange}   \r\n                    >\r\n                        {\r\n                            examsDates.map((date) => (\r\n                                <option key={date} value={date}>\r\n                                    {date}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </TextField>\r\n                </Toolbar>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell><Typography variant=\"h6\">Subjects</Typography></TableCell>\r\n                            <TableCell align=\"center\"><Typography variant=\"h6\">Scores</Typography></TableCell>\r\n                            \r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            marks.map((mark) => (\r\n                                <TableRow key={mark.subjectName}>\r\n                                    <TableCell>{mark.subjectName}</TableCell>\r\n                                    <TableCell align=\"center\">{mark.score}</TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function MarksManagement(props) {\r\n        const [data, setData] = useState([])\r\n        const [level, setLevel] = useState(\"A1\")\r\n        const [tableTitle, setTableTitle] = useState(\"A1  Students\")\r\n        const [openDialogBox, setOpenDialogBox] = useState(false)\r\n        const [openSummaryTable, setOpenSummaryTable] = useState(false)\r\n        const [selectedStudentStudentNumber, setSelectedStudentStudentNumber] = useState(\"\")\r\n        const [selectedStudentFullname, setSelectedStudentFullname] = useState(\"\")\r\n        const [importingStudentsByLevel, setImportingStudentsByLevel] = useState(false)\r\n        \r\n        const classes = useStyles();\r\n       \r\n        const staffnumber = request.auth.getAvailableUserDetails().studentOrStaffNumber\r\n        \r\n\r\n        const handleSelectLevelChange = (event) => {\r\n            setLevel(event.target.value)\r\n        }\r\n\r\n        const fetchStudentsData = () => {\r\n            request.get(`students/limitedInfos?level=${level}`, (err, res) => {\r\n                if(err){\r\n                    \r\n                }\r\n                else {\r\n                    setData(res.body)\r\n                }\r\n                setImportingStudentsByLevel(false)\r\n            })\r\n        }\r\n\r\n        useEffect(() => fetchStudentsData(), [])\r\n\r\n        const handleImportStudentButtonClick = () => {\r\n            setImportingStudentsByLevel(true)\r\n            fetchStudentsData()\r\n            setTableTitle(level + \"  Students\")\r\n        }\r\n\r\n        const handleClosedDialogBox = () => {\r\n            setOpenDialogBox(false)\r\n        }\r\n\r\n        const handleCloseSummaryTable = () => {\r\n            setOpenSummaryTable(false)\r\n        }\r\n\r\n\r\n        const userDetail = request.auth.getAvailableUserDetails()\r\n\r\n        return (\r\n            \r\n            <div>\r\n                <div >\r\n                <div className={classes.columnContainer}>\r\n                    <fieldset className={classes.fieldset}>\r\n                        \r\n                        <Container className={classes.container}>\r\n                        <TextField\r\n                            className={classes.textField}\r\n                            id=\"desiredLevel\"\r\n                            label=\"Level\"\r\n                            select\r\n                            SelectProps={{native:true}}\r\n                            name=\"level\"\r\n                            required={true}\r\n                            variant=\"outlined\"\r\n                            value={level}\r\n                            onChange={handleSelectLevelChange}\r\n                        >\r\n                            {levels.map((levl) => (\r\n                                <option key={levl} value={levl}>\r\n                                {levl}\r\n                                </option>\r\n                            ))}\r\n                        </TextField>\r\n                        <Button className={classes.button}\r\n                                color=\"primary\" variant=\"contained\" \r\n                                //size='small'\r\n                                onClick={handleImportStudentButtonClick}\r\n                        >\r\n                            <Box className={classes.rowContainer}>\r\n                                {!importingStudentsByLevel ? `import ${level} students` : <><CircularProgress color='inherit' size={30} className={classes.progress}/> {`Importing ${level} students`} </>}\r\n                            </Box>\r\n                        </Button>\r\n                        </Container>\r\n                    </fieldset>\r\n                    \r\n                </div>\r\n\r\n\r\n\r\n                <MaterialTable\r\n                    title={tableTitle}\r\n                    columns={[\r\n                        {title: 'Student No.', field: 'studentNumber'},\r\n                        {title: 'Name', field: 'name'},\r\n                        {title: 'Date of birth', field: 'dateOfBirth'},\r\n                    ]}\r\n                    data={data.map((student) => (\r\n                        {studentNumber: student.studentNumber,\r\n                         name: student.fullname ,\r\n                         dateOfBirth: student.dateOfBirth,\r\n                        }\r\n                    ))}\r\n\r\n                    actions= {[\r\n                        {\r\n                            icon: 'class',\r\n                            tooltip: 'View student grades ',\r\n                            onClick: (event, rowData) => {\r\n                                setOpenSummaryTable(true)\r\n                                setSelectedStudentStudentNumber(rowData.studentNumber)\r\n                                setSelectedStudentFullname(rowData.name)\r\n\r\n                            }\r\n                        },\r\n                        (userDetail.roles.indexOf(\"ROLE_STAFF_TEACHER\") > -1 ? ({\r\n                            icon: 'edit',\r\n                            tooltip: 'Edit Student Marks',\r\n                            onClick: (event, rowData) => {\r\n\r\n                                setOpenDialogBox(true)\r\n                                setSelectedStudentFullname(rowData.name)\r\n                                setSelectedStudentStudentNumber(rowData.studentNumber)\r\n                            }\r\n                        }): null),\r\n                        \r\n                    ]}\r\n\r\n                    options={{\r\n                        search: true,\r\n                        headerStyle:{backgroundColor:'#4791db', color:'white'},\r\n                    }}\r\n                    components={{\r\n                                    Toolbar: props => (\r\n                                        <div style={{color: '#115293', \r\n                                                     fontSize: '3.5em',\r\n                                                     fontWeight: 'bold', \r\n                                                     paddingBottom: '25px',\r\n                                                     paddingTop: '10px',\r\n                                                     }}>\r\n                                        <MTableToolbar {...props} />\r\n                                        </div>\r\n                                    )\r\n                    }}\r\n                />\r\n                </div>\r\n\r\n                \r\n                \r\n                <div >\r\n                    <Dialog\r\n                        open={openDialogBox}\r\n                        onClose={handleClosedDialogBox}\r\n                        maxWidth='xl'\r\n                    >\r\n                        <DialogContent>\r\n\r\n                            <MarkAssignmentTable\r\n                                studentNumber={selectedStudentStudentNumber}\r\n                                staffNumber={staffnumber}\r\n                                examLevel={level}\r\n                                studentFullName={selectedStudentFullname}\r\n                            />\r\n\r\n                        </DialogContent>\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={handleClosedDialogBox} color=\"primary\">Done</Button>\r\n                        </DialogActions>\r\n\r\n                    </Dialog>\r\n                </div>\r\n\r\n\r\n                <div >\r\n                    <Dialog\r\n                        open={openSummaryTable}\r\n                        onClose={handleCloseSummaryTable}\r\n                        maxWidth='xl'\r\n                    >\r\n                        <DialogContent>\r\n\r\n                            <MarksSummaryTable\r\n                                studentNumber={selectedStudentStudentNumber}\r\n                                studentFullName={selectedStudentFullname}\r\n                            />\r\n\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleCloseSummaryTable} color=\"primary\">Done</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    \r\n}","import React, { useState, useEffect } from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, TextField, Button,  CssBaseline, Typography, Box} from '@material-ui/core';\r\nimport {Error} from '@material-ui/icons';\r\nimport DialogBox from '../feedback/DialogBox'\r\n\r\nconst request = require ('../../resources/request');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    margin: theme.spacing(4, 0, 2, 0),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  error: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    margin: theme.spacing(3, 0, 2, 5)\r\n  },\r\n  errorMessage: {\r\n      marginLeft: theme.spacing(1.5)\r\n  },\r\n}));\r\n\r\n\r\nexport default function ChangeAccountPassword(props) {\r\n  const classes = useStyles();\r\n  let history = useHistory()\r\n  const [error, setError] = useState(false)\r\n  const [errorMessage, seterrorMessage] = useState(\"\")\r\n  const [formState, setFormState] = useState({\r\n      currentPassword: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n  })\r\n  const [openDBox, setOpenDBox] = useState(false)\r\n  \r\n\r\n  const handleOnSubmitClick = (event) => { \r\n      if(!validateConfirmPasswordMatchesNewPassword(formState.newPassword, formState.confirmPassword)) {\r\n          setError(true)\r\n          seterrorMessage('Confirm-password does not matches new-password')\r\n          event.preventDefault()\r\n        return\r\n      }\r\n\r\n      const passwordUpdateDataDto = {\r\n          username:         request.auth.getAvailableUserDetails().username || undefined,\r\n          currentPassword:  formState.currentPassword   || undefined,\r\n          newPassword:      formState.newPassword       || undefined,\r\n      }\r\n\r\n      request.post('credentials', passwordUpdateDataDto, (err, res) => {\r\n          if(err) {\r\n              setError(true)\r\n              seterrorMessage(err.response.body.message)\r\n          } else {\r\n              setOpenDBox(true)\r\n          }\r\n      })\r\n      event.preventDefault()\r\n  }\r\n\r\n  const handleOnTextFieldChange = (event) => {\r\n      setFormState({ ...formState, [event.target.name]: event.target.value})\r\n      if(error) {\r\n        setError(false)\r\n      }\r\n  }\r\n\r\n  const validateConfirmPasswordMatchesNewPassword = (newPassword, confirmPassword) => {\r\n      return newPassword && newPassword !== 'null' && newPassword !== 'undefined' &&\r\n             confirmPassword && confirmPassword !== 'null' && confirmPassword !== 'undefined' &&\r\n             newPassword === confirmPassword\r\n  }\r\n\r\n  const handleOnDBoxClose = () => {\r\n    setOpenDBox(false)\r\n  }\r\n\r\n  const handleDBoxOnButtonClick = () => {\r\n    setOpenDBox(false)\r\n    history.push(props.redirectDestination)\r\n\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Container component='main' >\r\n        <CssBaseline/>\r\n        <div className={classes.paper}>\r\n            <Typography variant=\"h3\" color=\"primary\"> Change Your Password </Typography>\r\n            <br/>\r\n          <Container maxWidth='sm'>\r\n          <form className={classes.form} onSubmit={handleOnSubmitClick}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"currentPassword\"\r\n              label=\"Current Password\"\r\n              type=\"password\"\r\n              id=\"currentPassword\"\r\n              onChange={handleOnTextFieldChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"newPassword\"\r\n              label=\"New Password\"\r\n              type=\"password\"\r\n              id=\"newPassword\"\r\n              onChange={handleOnTextFieldChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"confirmPassword\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              onChange={handleOnTextFieldChange}\r\n            />\r\n            {error && (<Box className={classes.error}>\r\n              <Error color='error'/>\r\n              <Typography className={classes.errorMessage} color='error'>{errorMessage}</Typography>\r\n            </Box>)}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </form>\r\n          </Container>\r\n        </div>\r\n      </Container>\r\n      {\r\n        !error && (\r\n          <DialogBox  \r\n            open={openDBox}  \r\n            title=\"Password Change Successful\"\r\n            contentText=\"Your password has successfully been changed\" \r\n            btn1Name='OK' \r\n            onclose={handleOnDBoxClose}\r\n            onButton1Click={handleDBoxOnButtonClick}\r\n          />\r\n        )\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {Paper} from '@material-ui/core';\r\n\r\nimport Header from '../header/Header'\r\nimport Sidebar from '../sidebar/Sidebar'\r\n//import HeaderAndSidebar from   '../header/HeaderAndSidebar'\r\nimport OverviewAccounts from   './OverviewAccounts'\r\nimport CreateAccount    from   './CreateAccount'\r\nimport ScheduleExam     from   './ScheduleExam'\r\nimport MarksManagement  from   './MarksManagement'\r\nimport PasswordChange   from   '../credentials/PasswordChange'\r\n\r\nconst request = require('../../resources/request')\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '100vh',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  paperMain: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    minHeight: '100%',\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  table: {\r\n    minWidth: 1000,\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\nclass Staff extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n          //sidebar component props\r\n            openAccountsButton: false,\r\n            openMarksExamsButton: false,\r\n            staffView: this.props.match.params.option, //\"accounts_view\"\r\n\r\n          //CreateAccount component props\r\n            accountType: \"student-account\",\r\n            isStaffAccount: false,\r\n            ROLE_STAFF_ADMIN: false,\r\n            ROLE_STAFF_MANAGER: false,\r\n            ROLE_STAFF_TEACHER: false,\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            dateOfBirth: \"\",\r\n            phoneNumber: \"\",\r\n            email: \"\",\r\n            currentLevel: \"A1\",\r\n            officePhoneNumber: \"\",\r\n            officeNumber: \"\",\r\n            openConfirmationDialog: false,\r\n            accountCreationInProgress: false,\r\n            accountCreationSuccess: false,\r\n            caError:false,\r\n            caErrorMessage:\"\",\r\n            openSuccessDBox:false,\r\n\r\n\r\n          //EdithAccount component props\r\n\r\n          //ScheduleExam component props\r\n          examDate: \"\",\r\n          examLevel: \"A1\", //default value\r\n          A1Checked: false,\r\n          A2Checked: false,\r\n          B1Checked: false,\r\n          B2Checked: false,\r\n          C1Checked: false,\r\n          seError: false,\r\n          seErrorMessage:\"\",\r\n          openScheduleExamDBox: false,\r\n        }\r\n    }\r\n\r\n\r\n    static getDerivegetDerivedStateFromProps(props, state) {\r\n\r\n        if(props.match.params.option !== state.staffView) {\r\n            return {\r\n                staffView: props.match.params.option\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    clearCreateAccountFormOnAccountCreationSuccessful = () => {\r\n        this.setState({\r\n            accountType: \"student-account\",\r\n            isStaffAccount: false,\r\n            ROLE_STAFF_ADMIN: false,\r\n            ROLE_STAFF_MANAGER: false,\r\n            ROLE_STAFF_TEACHER: false,\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            dateOfBirth: \"\",\r\n            phoneNumber: \"\",\r\n            email: \"\",\r\n            currentLevel: \"A1\",\r\n            officePhoneNumber: \"\",\r\n            officeNumber: \"\",\r\n            openConfirmationDialog: false,\r\n            accountCreationInProgress: false,\r\n            accountCreationSuccess: false,\r\n        })\r\n    }\r\n\r\n    clearScheduleExamFormOnScheduleSuccessful = () => {\r\n        this.setState({\r\n            examDate: \"\",\r\n            A1Checked: false,\r\n            A2Checked: false,\r\n            B1Checked: false,\r\n            B2Checked: false,\r\n            C1Checked: false,\r\n        })\r\n    }\r\n\r\n\r\n    // Eventhandler for the sidebar component\r\n    handleAccountsButtonClick = () => {\r\n\r\n        this.setState((state) => ({\r\n            openAccountsButton: !state.openAccountsButton\r\n        }));\r\n    }\r\n\r\n    handleClickView = () => {\r\n        this.setState({staffView: \"accounts_view\"})\r\n        this.props.history.push('/staffs/accounts/view')  \r\n    }\r\n\r\n    handleClickCreate = () => {\r\n        this.setState({staffView: \"accounts_create\"})\r\n        this.props.history.push('/staffs/accounts/create')\r\n    }\r\n\r\n    handleClickEdit = () => {\r\n        this.setState({staffView: \"accounts_edit\"})\r\n        this.props.history.push('/staffs/accounts/edit')\r\n    }\r\n\r\n    handleClickDelete = () => {\r\n        this.setState({staffView: \"accounts_delete\"})\r\n        this.props.history.push('/staffs/accounts/delete')\r\n    }\r\n\r\n    handleClickManageMarks = () => {\r\n        this.setState({staffView: \"manage_marks\"})\r\n        this.props.history.push('/staffs/marks-exams/manage-marks')\r\n    }\r\n\r\n    handleClickScheduleExams = () => {\r\n        this.setState({staffView: \"schedule_exams\"})\r\n        this.props.history.push('/staffs/marks-exams/schedule-exams')\r\n    }\r\n\r\n\r\n    handleMarksExamsButtonClick = () => {\r\n        this.setState((state) => ({\r\n            openMarksExamsButton: !state.openMarksExamsButton\r\n        }));\r\n    }\r\n\r\n\r\n\r\n    //Eventhandlers for the creatAccount component \r\n    handleRadioClick = (accountType) => {\r\n        this.setState({accountType})\r\n        this.setState((state) => ({\r\n            isStaffAccount: state.accountType === \"staff-account\" ? true : false\r\n        }))\r\n    }\r\n\r\n    handleCheckBoxClick = (stateProp, value) =>{\r\n        this.setState({[stateProp]: value})\r\n    }\r\n\r\n    handleCreatAccountTextFieldsChanges = (stateProp, value) => {\r\n        this.setState({[stateProp]: value})\r\n    }\r\n    \r\n    handleCreateAccountButtonClick = () => {\r\n        this.setState({openConfirmationDialog: true})\r\n    }\r\n\r\n    handleCancelOrCloseDialog = () => {\r\n        this.setState({openConfirmationDialog: false})\r\n    }\r\n\r\n    handleCASuccessDBoxOnClose = () => {\r\n        this.setState({openSuccessDBox: false})\r\n    }\r\n\r\n    handleCASuccessDBoxOnButton1Click = () => {\r\n        this.setState({openSuccessDBox: false})\r\n    }\r\n\r\n    handleCASuccessDBoxOnButton2Click = () => {\r\n        this.setState({openSuccessDBox: false})\r\n        this.props.history.push('/staffs/accounts/view') \r\n\r\n    }\r\n\r\n\r\n    handleConfirmButtonClick = () => {\r\n\r\n        this.setState({openConfirmationDialog: false,\r\n            accountCreationInProgress: true\r\n        })\r\n        \r\n        \r\n        const rolesDto = []\r\n        const userData = {\r\n            firstname: this.state.firstname || undefined,\r\n            lastname: this.state.lastname || undefined,\r\n            dateOfBirth: this.state.dateOfBirth || undefined,\r\n            phoneNumber: this.state.phoneNumber || undefined,\r\n            email: this.state.email || undefined,\r\n\r\n        }\r\n\r\n\r\n        if(this.state.isStaffAccount){\r\n\r\n            userData.officePhoneNumber = this.state.officePhoneNumber || undefined\r\n            userData.officeNumber = this.state.officeNumber || undefined\r\n            if(this.state.ROLE_STAFF_ADMIN) {\r\n                rolesDto.push(\"ROLE_STAFF_ADMIN\")\r\n            }\r\n            if(this.state.ROLE_STAFF_MANAGER) {\r\n                rolesDto.push(\"ROLE_STAFF_MANAGER\")\r\n            }\r\n            if(this.state.ROLE_STAFF_TEACHER) {\r\n                rolesDto.push(\"ROLE_STAFF_TEACHER\")\r\n            }\r\n\r\n            //send the account data to the server through th api\r\n            const staffDto = userData\r\n            const staffAccountDataDto = {staffDto, rolesDto}\r\n\r\n           //console.log(\"representation of the staffAccountDataDto => \\n \" + staffAccountDataDto )\r\n            \r\n            \r\n            request.post('staffs',staffAccountDataDto, (err, res) => {\r\n                \r\n                if(err) {\r\n                    this.setState({caError: true,\r\n                        caErrorMessage: err.response.body.message, })\r\n                }\r\n                else {\r\n                    this.setState({openSuccessDBox: true })\r\n                    this.clearCreateAccountFormOnAccountCreationSuccessful()\r\n\r\n                    if(this.state.caError) {\r\n                        this.setState({caError: false, caErrorMessage: \"\", })\r\n                    }\r\n                }\r\n                this.setState({accountCreationInProgress:false})\r\n            });\r\n\r\n        } else {\r\n            userData.currentLevel = this.state.currentLevel || undefined\r\n            rolesDto.push(\"ROLE_STUDENT\")\r\n            \r\n            const studentDto = userData;\r\n            const studentAccountDataDto = {studentDto, rolesDto}\r\n\r\n            request.post('students', studentAccountDataDto, (err, res) => {\r\n\r\n                if(err) {\r\n                    \r\n                    this.setState({caError: true,\r\n                        caErrorMessage: err.response.body.message, })\r\n                }\r\n                else {\r\n                    this.setState({openSuccessDBox:true})\r\n                    this.clearCreateAccountFormOnAccountCreationSuccessful()\r\n\r\n                    if(this.state.caError) {\r\n                        this.setState({caError: false, caErrorMessage: \"\", })\r\n                    }\r\n                }\r\n                this.setState({accountCreationInProgress:false})\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    //Eventhandler for scheduleExam component \r\n    handleScheduleExamTextFieldsChanges = (stateProp, value) => {\r\n        this.setState({[stateProp]: value})\r\n        if(this.state.seError) {\r\n            this.setState({seError:false,\r\n                seErrorMessage:\"\" })\r\n        }\r\n    }\r\n\r\n    handleScheduleExamCheckBoxChanges = (stateProp, value) => {\r\n        this.setState({[stateProp]: value})\r\n        if(this.state.seError) {\r\n            this.setState({seError:false,\r\n                seErrorMessage:\"\" })\r\n        }\r\n    }\r\n\r\n    handleSEOnDBoxClose = () => {\r\n        this.setState({openScheduleExamDBox: false})\r\n    }\r\n\r\n    handleSEDBoxButtonClick = () => {\r\n        this.setState({openScheduleExamDBox: false})\r\n        this.props.history.push('/staffs/accounts/view')\r\n    }\r\n\r\n    handleScheduleExamScheduleButtonClick = () => {\r\n\r\n        const scheduledExamsDataDto = {\r\n            examDate: this.state.examDate || undefined,\r\n            examLevels:[]\r\n        }\r\n        if(this.state.A1Checked) {\r\n            scheduledExamsDataDto.examLevels.push('A1')\r\n        }\r\n        if(this.state.A2Checked) {\r\n            scheduledExamsDataDto.examLevels.push('A2')\r\n        }\r\n        if(this.state.B1Checked) {\r\n            scheduledExamsDataDto.examLevels.push('B1')\r\n        }\r\n        if(this.state.B2Checked) {\r\n            scheduledExamsDataDto.examLevels.push('B2')\r\n        }\r\n        if(this.state.C1Checked) {\r\n            scheduledExamsDataDto.examLevels.push('C1')\r\n        }\r\n\r\n        \r\n\r\n        request.post('exams', scheduledExamsDataDto, (err, res) => {\r\n\r\n            if(err) {\r\n               \r\n                this.setState({seError:true,\r\n                    seErrorMessage:err.response.body.message })\r\n            } else {\r\n                \r\n                this.setState({openScheduleExamDBox: true})\r\n                if(this.state.seError) {\r\n                    this.setState({seError:false,\r\n                        seErrorMessage:\"\" })\r\n                }\r\n                this.clearScheduleExamFormOnScheduleSuccessful()\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    renderStaffViews = (views) => {\r\n        switch(views) {\r\n            case \"view\":\r\n                //return viewAccounts view component\r\n                return <OverviewAccounts/>\r\n            case \"create\":\r\n                //return createAccount view component\r\n                const createAccountProps = {\r\n                    accountType: this.state.accountType,\r\n                    isStaffAccount: this.state.isStaffAccount,\r\n                    ROLE_STAFF_ADMIN: this.state.ROLE_STAFF_ADMIN,\r\n                    ROLE_STAFF_MANAGER: this.state.ROLE_STAFF_MANAGER,\r\n                    ROLE_STAFF_TEACHER: this.state.ROLE_STAFF_TEACHER,\r\n                    firstname: this.state.firstname,\r\n                    lastname: this.state.lastname,\r\n                    dateOfBirth: this.state.dateOfBirth,\r\n                    phoneNumber: this.state.phoneNumber,\r\n                    email: this.state.email,\r\n                    currentLevel: this.state.currentLevel,\r\n                    officePhoneNumber: this.state.officePhoneNumber,\r\n                    officeNumber: this.state.officeNumber,\r\n                    openConfirmationDialog: this.state.openConfirmationDialog,\r\n                    accountCreationInProgress: this.state.accountCreationInProgress,\r\n                    accountCreationSuccess: this.state.accountCreationSuccess,\r\n                    error: this.state.caError,\r\n                    errorMessage: this.state.caErrorMessage,\r\n                    openSuccessDBox: this.state.openSuccessDBox,\r\n                }\r\n                return <CreateAccount \r\n                            createAccountProps={createAccountProps}\r\n                            handleRadioClick={this.handleRadioClick }\r\n                            handleCheckBoxClick={this.handleCheckBoxClick}\r\n                            handleCreatAccountTextFieldsChanges={this.handleCreatAccountTextFieldsChanges}\r\n                            handleCreateAccountButtonClick={this.handleCreateAccountButtonClick}\r\n                            handleCancelOrCloseDialog={this.handleCancelOrCloseDialog}\r\n                            handleConfirmButtonClick={this.handleConfirmButtonClick }\r\n                            handleCASuccessDBoxOnClose={this.handleCASuccessDBoxOnClose}\r\n                            handleCASuccessDBoxOnButton1Click={this.handleCASuccessDBoxOnButton1Click}\r\n                            handleCASuccessDBoxOnButton2Click={this.handleCASuccessDBoxOnButton2Click}\r\n                       />\r\n            case \"edith\":\r\n                //return edithAccount view component\r\n                break;\r\n            case \"delete\":\r\n                //return deleteAccount view component\r\n                break;\r\n            case \"manage-marks\":\r\n                return(\r\n                    <MarksManagement/>\r\n                )\r\n            case \"schedule-exams\":\r\n                const scheduleExamProps = {\r\n                    examDate: this.state.examDate,\r\n                    examLevel: this.state.examLevel,\r\n                    A1Checked: this.state.A1Checked,\r\n                    A2Checked: this.state.A2Checked,\r\n                    B1Checked: this.state.B1Checked,\r\n                    B2Checked: this.state.B2Checked,\r\n                    C1Checked: this.state.C1Checked,\r\n                    error:     this.state.seError,\r\n                    errorMessage: this.state.seErrorMessage,\r\n                    openScheduleExamDBox:this.state.openScheduleExamDBox,\r\n                }\r\n                return(\r\n                    <ScheduleExam\r\n                        scheduleExamProps={scheduleExamProps}\r\n                        handleScheduleExamTextFieldsChanges={this.handleScheduleExamTextFieldsChanges}\r\n                        handleScheduleExamCheckBoxChanges={this.handleScheduleExamCheckBoxChanges}\r\n                        handleScheduleExamScheduleButtonClick={this.handleScheduleExamScheduleButtonClick}\r\n                        handleSEOnDBoxClose={this.handleSEOnDBoxClose}\r\n                        handleSEDBoxButtonClick={this.handleSEDBoxButtonClick}\r\n                    />\r\n                );\r\n            case \"password-change\":\r\n                return(\r\n                    <PasswordChange redirectDestination='/staffs/accounts/view'/>\r\n                );\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const sidebarProps = {\r\n            openAccountsButton: this.state.openAccountsButton,\r\n            openMarksExamsButton:this.state.openMarksExamsButton,\r\n            staffView: this.state.staffViews,\r\n        }\r\n\r\n        const accountsCollapseHandlers = {\r\n            handleClickView: this.handleClickView,\r\n            handleClickCreate: this.handleClickCreate,\r\n            handleClickEdit: this.handleClickEdit,\r\n            handleClickDelete: this.handleClickDelete,\r\n        }\r\n\r\n        const marksExamsCollapseHandlers = {\r\n            handleClickScheduleExams: this.handleClickScheduleExams,\r\n            handleClickManageMarks: this.handleClickManageMarks,\r\n        }\r\n\r\n\r\n        const {classes} = this.props;\r\n\r\n        return(\r\n\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <Header className={classes.appBar} />\r\n\r\n                <Sidebar classNameDrawer={classes.drawer} \r\n                  classNameDrawerPaper={classes.drawer}\r\n                  classNameDrawerContainer={classes.drawer}\r\n                  sidebarProps={sidebarProps}\r\n                  handleAccountsButtonClick={this.handleAccountsButtonClick}\r\n                  accountsCollapseHandlers={accountsCollapseHandlers}\r\n                  handleMarksExamsButtonClick={this.handleMarksExamsButtonClick}\r\n                  marksExamsCollapseHandlers={marksExamsCollapseHandlers}\r\n                />\r\n                <Paper className={classes.paperMain}>\r\n                    <Toolbar/>\r\n                    {this.renderStaffViews(this.props.match.params.option)}\r\n                </Paper>\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Staff);","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Typography, TextField, TableContainer, } from '@material-ui/core';\r\nimport {Table, TableBody, TableCell, TableHead, TableRow, } from '@material-ui/core';\r\nimport {Paper, Toolbar, Container,} from '@material-ui/core';\r\n\r\nimport Header           from './../header/Header'\r\nimport PasswordChange   from '../credentials/PasswordChange'\r\n\r\nconst request = require ('../../resources/request');\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(8),\r\n        minHeight: '100vh',\r\n    },\r\n    passwordChange: {\r\n        marginTop: theme.spacing(4),\r\n    }\r\n})\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fieldset:{\r\n        margin: theme.spacing(8, 0, 8, 0),\r\n        paddingRight: theme.spacing(5),\r\n        borderStyle: \"groove\",\r\n        borderColor: theme.palette.info.light, \r\n        alignItems:'stretch',\r\n       padding: theme.spacing(1, 1, 1, 1),\r\n    },\r\n    legend:{\r\n        backgroundColor: \"#FFFAFA\",\r\n        color: theme.palette.secondary.main,\r\n        padding: theme.spacing(1, 1, 1, 1),\r\n    },\r\n    textFieldSelect: {\r\n        margin: theme.spacing(0,30,3,0),\r\n        backgroundColor: \"#FFFFFF\",\r\n        maxWidth: 150,\r\n        flexGrow: 1,\r\n    },\r\n    toolbar: {\r\n        paddingTop: theme.spacing(2.5),\r\n    },\r\n    label: {\r\n        color: theme.palette.primary.main,\r\n        marginRight:theme.spacing(3)\r\n    },\r\n    table: {\r\n        minWidth: 1000,\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    passwordChange: {\r\n        marginTop: theme.spacing(5),\r\n    },\r\n    \r\n}))\r\n\r\n\r\n\r\n\r\n\r\nfunction EnhancedTableCell(props) {\r\n    return(\r\n        <TableCell style={{borderBottom: \"none\", fontSize:20}} align={props.align}> {props.value} </TableCell> \r\n    )\r\n}\r\n\r\nfunction EnhancedStudentDetails(props) {\r\n    const classes = useStyles()\r\n    const studentDetails = props.studentDetails\r\n    \r\n    return(\r\n        <div>\r\n            <fieldset className={classes.fieldset}>\r\n                <legend className={classes.legend}>Student Details</legend>\r\n                <TableContainer compponent={Paper}>\r\n                    <Table>\r\n                        <TableBody>\r\n                        <TableRow>\r\n                            <EnhancedTableCell value={<b className={classes.label}>First name:</b>}/>\r\n                            <EnhancedTableCell value={studentDetails.firstname}/>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <EnhancedTableCell value={<b className={classes.label}>Last name:</b>}/>\r\n                            <EnhancedTableCell value={studentDetails.lastname}/>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <EnhancedTableCell value={<b className={classes.label}>Date of birth:</b>}/>\r\n                            <EnhancedTableCell value={studentDetails.dateOfBirth}/>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <EnhancedTableCell value={<b className={classes.label}>Phone:</b>}/>\r\n                            <EnhancedTableCell value={studentDetails.phoneNumber}/>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <EnhancedTableCell value={<b className={classes.label}>Email:</b>}/>\r\n                            <EnhancedTableCell value={studentDetails.email}/>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <EnhancedTableCell value={<b className={classes.label}>Current level:</b>}/>\r\n                            <EnhancedTableCell value={studentDetails.currentLevel}/>\r\n                        </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </fieldset>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction EnhancedToolbar(props) {\r\n    const classes = useStyles()\r\n    const dates = props.dates\r\n\r\n    const handleOnDateSelect = (event) => {\r\n        props.handleOnDateSelect(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toolbar className={classes.toolbar}>\r\n                <TextField\r\n                    className={classes.textFieldSelect}\r\n                    id=\"choosenDate\"\r\n                    label='Choose a date'\r\n                    variant='outlined'\r\n                    //size='small'\r\n                    helperText='Exam Session Date'\r\n                    select\r\n                    SelectProps={{native:true}}\r\n                    value={props.choosenDate}\r\n                    onChange={handleOnDateSelect}\r\n                >\r\n                    {\r\n                        dates.map((date) => (\r\n                            <option key={date} value={date}>\r\n                                {date}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </TextField>\r\n                <Typography  color='primary' variant='h5'>Marks Report &nbsp; {props.level}</Typography>\r\n            </Toolbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MarksSummaryReport(props) {\r\n\r\n    const classes = useStyles()\r\n    const examMarks = props.examMarks\r\n    return(\r\n        <div>\r\n            <Paper className={classes.paper} elevation={3}>\r\n            <EnhancedToolbar level={props.level} dates={props.dates}\r\n                handleOnDateSelect={props.handleOnDateSelect}\r\n                choosenDate={props.choosenDate}\r\n            />\r\n            <TableContainer component={Paper}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Subject</TableCell>\r\n                        <TableCell>Score</TableCell>\r\n                        <TableCell>Status</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        examMarks.map((mark) => (\r\n                            <TableRow key={mark.subjectName}>\r\n                                <TableCell>{mark.subjectName}</TableCell>\r\n                                <TableCell>{mark.score}</TableCell>\r\n                                <TableCell>{mark.status}</TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction StudentReportCard(props) {\r\n    const classes = useStyles()\r\n    \r\n    return(\r\n        <Container component='main' maxWidth='md'>\r\n            <div className={classes.container}>\r\n                <EnhancedStudentDetails studentDetails={props.studentReportCardProps.studentDetails} />\r\n                <MarksSummaryReport\r\n                    level={props.studentReportCardProps.level}\r\n                    studentDetails={props.studentReportCardProps.studentDetails}\r\n                    examMarks={props.studentReportCardProps.examMarks}\r\n                    dates={props.studentReportCardProps.dates}\r\n                    choosenDate={props.studentReportCardProps.choosenDate}\r\n                    handleOnDateSelect={props.studentReportCardProps.handleOnDateSelect}\r\n                />\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nclass Student extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            marks: [],\r\n            studentDetails:{},\r\n            examsDates: [],\r\n            choosenDate: \"\",\r\n            marksReportLevel: \"\",\r\n            studentNumber: request.auth.getAvailableUserDetails().studentOrStaffNumber,\r\n        }\r\n    }\r\n\r\n    //todo: remember to add an argument to the fxn\r\n    fetchtMarksData = (studentNb, selectedDate) => {\r\n        \r\n        request.get(`marks/exam-report/?studentNumber=${studentNb}&examDate=${selectedDate}`, (err, res) => {\r\n            if(err) {\r\n                \r\n            } else {\r\n                \r\n                this.setState({marks: res.body})\r\n                if(res.body && res.body.length > 0) {\r\n                    this.setState({marksReportLevel: res.body[0].examLevel})\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    fetchExamsDates = (studentNb) => {\r\n        request.get(`marks/exam-dates?studentNumber=${studentNb}`, (err, res) => {\r\n            if(err) {\r\n                \r\n            }else {\r\n                \r\n                this.setState({examsDates: res.body})\r\n                if(res.body && res.body.length > 0) { \r\n                    this.setState({choosenDate: res.body[0]})\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    //todo: remember to add an argument to the fxn\r\n    fetchStudentData = (studentNb) => {\r\n        request.get(`students/${studentNb}`, (err, res) => {\r\n            if(err) {\r\n                \r\n            } else {\r\n                \r\n                this.setState({studentDetails: res.body})\r\n            }\r\n        })\r\n    }\r\n\r\n    fetchMarksDataOnComponentMount = (studentNumber) => { \r\n        request.get(`marks/latest-completely-assessed-exam-session?studentNumber=${studentNumber}`, (err, res) => {\r\n            if(err) {\r\n                \r\n            } else {\r\n                \r\n                this.setState({marks: res.body})\r\n                if(res.body && res.body.length > 0) {\r\n                    this.setState({marksReportLevel: res.body[0].examLevel})\r\n                }\r\n                    \r\n            }\r\n        })\r\n    }\r\n\r\n    handleOnDateSelect = (choosenDate) => {\r\n        this.fetchtMarksData(this.state.studentNumber, choosenDate)\r\n        this.setState({choosenDate: choosenDate})\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.fetchStudentData(this.state.studentNumber)\r\n        this.fetchExamsDates(this.state.studentNumber)\r\n        this.fetchMarksDataOnComponentMount(this.state.studentNumber)\r\n        \r\n    }\r\n\r\n    renderStudentViews = (views) => {\r\n        \r\n        switch(views) {\r\n            case \"report-card\":\r\n                const studentReportCardProps = {\r\n                    studentDetails:this.state.studentDetails,\r\n                    level: this.state.marksReportLevel,\r\n                    examMarks:this.state.marks,\r\n                    dates:this.state.examsDates,\r\n                    choosenDate:this.state.choosenDate,\r\n                    handleOnDateSelect:this.handleOnDateSelect,\r\n                }\r\n\r\n                return(\r\n                    <StudentReportCard studentReportCardProps={studentReportCardProps}/>\r\n                );\r\n            case \"password-change\":\r\n                return(\r\n                    <div style={{marginTop: '110px'}}>\r\n                        <PasswordChange redirectDestination={`/students/${request.auth.getAvailableUserDetails().username.replace('.', '-')}/report-card`}/>  \r\n                    </div>\r\n                );\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                \r\n                <div className={classes.root}>\r\n                    {this.renderStudentViews(this.props.match.params.option)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Student)","import React, { useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Error, LockOutlined} from '@material-ui/icons';\r\nimport {TextField, Button, CssBaseline, Typography} from '@material-ui/core';\r\nimport {Box, Grid, Paper, Avatar, CircularProgress} from '@material-ui/core';\r\n\r\n//image source: https://images.app.goo.gl/GVfAtDhD2wsu6opD7\r\nimport backgroundImage from './../../assets/foreign_language_books.jpg'\r\nconst request = require ('../../resources/request');\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n    theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  error: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    margin: theme.spacing(3, 0, 2, 5)\r\n  },\r\n  errorMessage: {\r\n      marginLeft: theme.spacing(1.5),\r\n      textAlign: 'center',\r\n  },\r\n  progress: {\r\n    marginRight: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const classes = useStyles();\r\n  const [username, setUserName] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [error, setError] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n\r\n  const redirect = () => {\r\n    const userDetail = request.auth.getAvailableUserDetails()\r\n\r\n    if(userDetail.roles.indexOf(\"ROLE_STAFF_ADMIN\") > -1 || userDetail.roles.indexOf(\"ROLE_STAFF_MANAGER\") > -1 || userDetail.roles.indexOf(\"ROLE_STAFF_TEACHER\") > -1 ) {\r\n      \r\n      props.history.push('/staffs/accounts/view')\r\n      \r\n    } else if(userDetail.roles.indexOf(\"ROLE_STUDENT\") > -1){\r\n      \r\n      props.history.push(`/students/${userDetail.username.replace('.', '-')}/report-card`)\r\n\r\n    }\r\n  }\r\n\r\n\r\n  const handleOnSignInButtonClick = (event) => {\r\n\r\n    setLoading(true)\r\n    const credential = {\r\n      username: username || undefined,\r\n      password: password || undefined\r\n    }\r\n\r\n    request.login(credential, (err, res) => {\r\n      if(err) {\r\n        setError(true)\r\n        setLoading(false)\r\n      } else {\r\n        request.auth.authenticate(res.header.authorization.split(' ')[1])\r\n        setLoading(false)\r\n        redirect()\r\n      }\r\n    })\r\n    event.preventDefault()\r\n  }\r\n\r\n  \r\n  const handleOnUsernameTextfieldChange = (event) => {\r\n    setUserName(event.target.value)\r\n  }\r\n\r\n  const handleOnPasswordTextfieldChange = (event) => {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlined />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={handleOnSignInButtonClick} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={handleOnUsernameTextfieldChange}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={handleOnPasswordTextfieldChange}\r\n              value={password}\r\n             // autoComplete=\"current-password\"\r\n            />\r\n            {error && (<Box className={classes.error}>\r\n              <Error color='error'/>\r\n              <Typography className={classes.errorMessage} color='error'><> Login failed.<br/> Your password or username is incorrect</> </Typography>\r\n            </Box>)}\r\n            \r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              {loading && <CircularProgress color='inherit' size={30} className={classes.progress}/>}\r\n              Sign In\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\n// This form is derived from the material ui templates examples\r\n// src: https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-in-side/SignInSide.js","import React, {Component} from 'react'\r\nimport {BrowserRouter as Router, Route, Switch,  Redirect} from 'react-router-dom'\r\nimport { LastLocationProvider, useLastLocation } from 'react-router-last-location';\r\n\r\nimport Staff from './components/staff/Staff'\r\nimport Student from './components/student/Student'\r\nimport Login from './components/login/Login'\r\n\r\nconst request = require ('./resources/request');\r\n\r\n//inspired from https://reacttraining.com/react-router/web/example/auth-workflow\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={props => (\r\n    request.auth.isAuthenticated() ? (\r\n      <Component {...props}/>\r\n    ) : (\r\n      <Redirect to={{\r\n        pathname: '/',\r\n        state: { from: props.location }\r\n      }}/>\r\n    )\r\n  )}/>\r\n)\r\n\r\n\r\n\r\nclass MainRouter extends Component {\r\n    render() {\r\n      return (\r\n        <div>   \r\n            <Router>\r\n              <LastLocationProvider>\r\n                <Route exact path=\"/\" component={Login}/>\r\n                <PrivateRoute exact  path=\"/login\" component={Login}/>\r\n                <PrivateRoute  exact path=\"/staffs/:menu/:option\" component={Staff}/>\r\n                <PrivateRoute  exact path=\"/students/:user/:option\" component={Student}/>\r\n              </LastLocationProvider>\r\n            </Router>\r\n    \r\n        </div>)\r\n    }\r\n  }\r\n  \r\n  export default MainRouter","import React from 'react'\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nimport MainRouter from './MainRouter'\r\n//import { hot } from 'react-hot-loader'\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <BrowserRouter>\r\n                    <MainRouter/>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n   \r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root') \r\n);","export const API_BASE_URL = 'http://192.168.99.100:9090/api/'\t// // process.env.REACT_APP_API_BASE_URL || 'http://localhost:9090/api/' || 'http://192.168.99.101:9090/api/' || 'http://192.168.99.100:9090/api/' || 'https://llce-grade-management-server.herokuapp.com/api/login'\r\nexport const ACCESS_TOKEN = 'accessToken';            \r\n\r\n\r\n//App URLs\r\nexport const ACCOUNTS_OVERVIEW      = \"/admin/accounts-overview\";\r\nexport const ACCOUNT_CREATE         = \"/admin/create-account\";","import {API_BASE_URL} from '../constants'\r\n\r\nconst request = require('superagent');\r\n\r\n\r\nconst login = (user, callback) => {\r\n    request.post(API_BASE_URL  + 'login')\r\n            .set('Content-Type', 'application/json')\r\n            .set('Accept', 'text/plain')\r\n            .send(user)\r\n            .end((err, res) =>{\r\n                callback(err, res)\r\n            }) \r\n}\r\n\r\n\r\nconst logout = (callback)=> {\r\n    callback()\r\n}\r\n\r\n\r\n\r\nconst get = (url, callback) => {\r\n    request.get(API_BASE_URL + url)\r\n           .set('Content-Type', 'application/json')\r\n           .set('Accept', 'application/json')\r\n           .set('Authorization', \"Bearer \" + JSON.parse(sessionStorage.getItem('jwt')))\r\n           .end((err, res) => {\r\n                callback(err, res)\r\n           })\r\n}\r\n\r\n\r\n\r\nconst post = (url,body, callback) => {\r\n    request.post(API_BASE_URL + url)\r\n           .set('Content-Type', 'application/json')\r\n           .set('Accept', 'application/json')\r\n           .set('Authorization', \"Bearer \" + JSON.parse(sessionStorage.getItem('jwt')))\r\n           .send(body)\r\n           .end((err, res) => {\r\n               callback(err,res)\r\n           })\r\n}\r\n\r\n\r\nconst put = (url, body, callback) => {\r\n    request.put(API_BASE_URL + url)\r\n           .set('Content-Type', 'application/json')\r\n           .set('Accept', 'application/json')\r\n           .set('Authorization', \"Bearer \" + JSON.parse(sessionStorage.getItem('jwt')))\r\n           .send(body)\r\n           .end((err, res) => {\r\n                callback(err,res)\r\n           })\r\n}\r\n\r\n\r\nconst remove = (url, body, callback) => {\r\n    request.delete(API_BASE_URL + url)\r\n           .set('Content-Type', 'application/json')\r\n           .set('Accept', 'application/json')\r\n           .set('Authorization', \"Bearer \" + JSON.parse(sessionStorage.getItem('jwt')))\r\n           .send(body)\r\n           .end((err, res) => {\r\n                callback(err,res)\r\n           })\r\n}\r\n\r\nfunction isObjectPresent(obj)\r\n{\r\n return obj && obj !== 'null' && obj !== 'undefined';\r\n}\r\n\r\nconst auth = {\r\n\r\n    isAuthenticated() {\r\n      if (sessionStorage.getItem('jwt'))\r\n        return JSON.parse(sessionStorage.getItem('jwt'))\r\n      else\r\n        return false\r\n    },\r\n\r\n    authenticate(jwt, callback) {\r\n      sessionStorage.setItem('jwt', JSON.stringify(jwt))\r\n      if(typeof callback === 'function' && callback()) {\r\n        callback()\r\n      }\r\n      \r\n    },\r\n\r\n    logout(callback) {\r\n      sessionStorage.removeItem('jwt')\r\n      if(typeof callback === 'function' && callback()) {\r\n        callback()\r\n      }\r\n    },\r\n\r\n    decodeJWT(token){\r\n\r\n      if(isObjectPresent(token)) {\r\n        const jwtPayload = JSON.parse(atob(token.split('.')[1]));\r\n        return jwtPayload; \r\n      } else {\r\n        return undefined\r\n      }   \r\n    },\r\n\r\n    getAvailableUserDetails() {\r\n      const jwtPayload = this.decodeJWT(JSON.parse(sessionStorage.getItem('jwt')))\r\n      const userDetails = {\r\n        username: jwtPayload.sub,\r\n        studentOrStaffNumber: jwtPayload.studentOrStaffNumber,\r\n        roles: jwtPayload.roles,\r\n      }\r\n      return userDetails\r\n    }\r\n  }\r\n\r\n\r\nexport{\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    login,\r\n    //singup,\r\n    logout,\r\n    auth\r\n}"],"sourceRoot":""}